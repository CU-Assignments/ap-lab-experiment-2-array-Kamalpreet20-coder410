class Solution {
public:
    vector<int> twoSum(vector<int>& nums, int target) {
        unordered_map<int, int> numMap; // Stores number and its index
        
        for (int i = 0; i < nums.size(); i++) {
            int complement = target - nums[i]; // Find the complement
            
            if (numMap.find(complement) != numMap.end()) {
                return {numMap[complement], i}; // Return indices
            }
            
            numMap[nums[i]] = i; // Store number and its index
        }
        
        return {}; // No solution (this won't happen as per the problem statement)
    }
};
